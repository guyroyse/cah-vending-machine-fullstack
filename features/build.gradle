import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath "com.github.samueltbrown:gradle-cucumber-plugin:0.7.2"

		// if you use the version of cucumber-jvm that the plugin was built with
		// (1.1.6 for version 0.7), the line below is unnecessary
		classpath "info.cukes:cucumber-core:1.1.8"
	}
}

ext {
	groovyVersion = '2.3.6'
	gebVersion = '0.10.0'
	seleniumVersion = '2.43.1'
	cucumberJvmVersion = '1.1.8'
	chromeDriverVersion = '2.10'
	phantomJsVersion = '1.9.7'
}

apply plugin: "groovy"
apply plugin: "com.github.samueltbrown.cucumber"

apply from: "gradle/idea/idea.gradle"
apply from: "gradle/ci.gradle"
apply from: "gradle/osSpecificDownloads.gradle"

repositories {
	jcenter()
}

dependencies {
	testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"
	testCompile "org.gebish:geb-core:$gebVersion"
	testCompile "org.seleniumhq.selenium:selenium-api:$seleniumVersion"

	testCompile "info.cukes:cucumber-core:$cucumberJvmVersion"
	testCompile "info.cukes:cucumber-groovy:$cucumberJvmVersion"

	// this supplies some pre-built cucumber steps for driving Geb,
	// see https://github.com/tomdcc/geb-cucumber
	testCompile "io.jdev.geb:geb-cucumber:0.2"

	testCompile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"

	// pick whichever drivers you want. We test against most of them here.
	// see src/test/resources/GebConfig.groovy for how to switch between them
	cucumberRuntime "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
	cucumberRuntime "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
	cucumberRuntime("com.github.detro.ghostdriver:phantomjsdriver:1.1.0") {
		// phantomjs driver pulls in a different selenium version
		transitive = false
	}
}

cucumber {
	formats = [
		'pretty', // prints nice format out to the console
		'html:build/reports/cucumber', // html
		'junit:build/cucumber.xml' // junit format for integration with CI tool etc
	]
	// src/cucumber/resources is included automatically
	glueDirs = [
		"classpath:io.jdev.geb.cucumber.steps.groovy.en"
	]
}

tasks.cucumber {
	dependsOn unzipChromeDriver, unzipPhantomJs

	doFirst {
		def chromeDriverFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "chromedriver.exe" : "chromedriver"
		System.setProperty("webdriver.chrome.driver", new File(unzipChromeDriver.outputs.files.singleFile, chromeDriverFilename).absolutePath)
		def phantomJsFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "phantomjs.exe" : "bin/phantomjs"
		System.setProperty("phantomjs.binary.path", new File(unzipPhantomJs.outputs.files.singleFile, phantomJsFilename).absolutePath)
	}
}
